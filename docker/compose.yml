# Definindo a rede brigde
networks:
  monitoramento:
    external: true

services:

  grafana:
    image: grafana/grafana:9.3.6
    container_name: grafana_monitor
    networks:
      monitoramento:
        ipv4_address: 192.168.1.2
    # Porta (host/container)
    ports:
      - "3000:3000"
    
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: grc_cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    networks:
      monitoramento:
        ipv4_address: 192.168.1.3
    # Porta (host/container)
    ports:
      - "8080:8080"
    
  prometheus:
    image: prom/prometheus
    container_name: prom_prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - "--storage.tsdb.retention.time=30d"
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      monitoramento:
        ipv4_address: 192.168.1.4
    # Porta (host/container)
    ports:
      - "9090:9090"

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      monitoramento:
        ipv4_address: 192.168.1.5
    # Porta (host/container)
    ports:
      - "9100:9100"

  monitor_script:
    image: python:3.10
    container_name: monitor_script
    working_dir: /app
    volumes:
      - ./python_script/monitor_script.py:/app/monitor_script.py
    command: python /app/monitor_script.py
    networks:
      monitoramento:
        ipv4_address: 192.168.1.6
    # Porta (host/container)
    ports:
      - "8085:8085"